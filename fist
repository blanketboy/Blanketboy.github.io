tiktok_clone/
├── lib/
│   ├── main.dart
│   └── video_item.dart
└── pubspec.yaml
name: tiktok_clone
description: A basic TikTok clone
version: 1.0.0+1

environment:
  sdk: ">=2.17.0 <3.0.0"

dependencies:
  flutter:
    sdk: flutter
  video_player: ^2.7.0
  flutter_bloc: ^8.1.2

flutter:
  uses-material-design: true
  assets:
    - assets/videos/

import 'package:flutter/material.dart';
import 'package:video_player/video_player.dart';
import 'video_item.dart';

void main() => runApp(TikTokClone());

class TikTokClone extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'TikTok Clone',
      theme: ThemeData.dark(),
      home: VideoFeedPage(),
      debugShowCheckedModeBanner: false,
    );
  }
}

class VideoFeedPage extends StatelessWidget {
  final List<String> videoPaths = [
    'assets/videos/video1.mp4',
    'assets/videos/video2.mp4',
    'assets/videos/video3.mp4',
  ];

  @override
  Widget build(BuildContext context) {
    return PageView.builder(
      scrollDirection: Axis.vertical,
      itemCount: videoPaths.length,
      itemBuilder: (context, index) {
        return VideoItem(videoPath: videoPaths[index]);
      },
    );
  }
}

import 'package:flutter/material.dart';
import 'package:video_player/video_player.dart';

class VideoItem extends StatefulWidget {
  final String videoPath;

  const VideoItem({Key? key, required this.videoPath}) : super(key: key);

  @override
  _VideoItemState createState() => _VideoItemState();
}

class _VideoItemState extends State<VideoItem> {
  late VideoPlayerController _controller;
  bool _liked = false;

  @override
  void initState() {
    super.initState();
    _controller = VideoPlayerController.asset(widget.videoPath)
      ..initialize().then((_) {
        setState(() {});
        _controller.play();
        _controller.setLooping(true);
      });
  }

  @override
  void dispose() {
    _controller.dispose();
    super.dispose();
  }

  void _toggleLike() {
    setState(() {
      _liked = !_liked;
    });
  }

  @override
  Widget build(BuildContext context) {
    return _controller.value.isInitialized
        ? Stack(
            children: [
              SizedBox.expand(
                child: FittedBox(
                  fit: BoxFit.cover,
                  child: SizedBox(
                    width: _controller.value.size.width,
                    height: _controller.value.size

